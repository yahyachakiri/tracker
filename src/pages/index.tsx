import { useState } from 'react';
import Head from 'next/head';
import { GetServerSidePropsContext } from 'next';
// @ts-ignore
import { getServerSession } from 'next-auth';
import { authOptions } from './api/auth/test';

import { Achievements, Calendar, Emails, Habits, ToDoList, Work, WorkCounter } from '@cards/index';
import { NavBar, TopBar } from '@bar/index';
import { DataContext, TodolistContext } from '@/context/index';
import { IPage, ITodolist } from '@interfaces/index';
import { ISODate } from '@utils/index';

interface props {
    data: IPage[];
    todolistData: ITodolist[];
}

export default function Home({ data, todolistData }: props) {
    const [emailUnread] = useState(false);
    const [calendarUnread] = useState(false);

    return (
        <DataContext.Provider value={data}>
            <TodolistContext.Provider value={todolistData}>
                <Head>
                    <title>Dashboard</title>
                    <meta name="description" content="Generated by create next app" />
                </Head>
                <NavBar emailUnread={emailUnread} calendarUnread={calendarUnread} />
                <main className="sm:pl-40 p-5 pb-20 sm:p-10">
                    <div className="mb-3 sm:mb-11 flex items-start justify-between">
                        <p className="font-semibold text-lg sm:text-3xl min-w-0">Good morning, Yahya CHAKIRI</p>
                        <TopBar emailUnread={emailUnread} calendarUnread={calendarUnread} />
                    </div>
                    <div className="grid auto-cols-fr gap-4 sm:gap-7">
                        <WorkCounter className="col-span-4 time:col-span-1" />
                        <Achievements time="range" linkState={true} className="col-span-4 time:col-span-3" />
                        <Work time="range" linkState={true} className="col-span-4 lg:col-span-2 lg:row-span-2" />
                        <Habits time="short" linkState={true} className="col-span-4 lg:col-span-2" />
                        <ToDoList time="short" linkState={true} className="col-span-4 md:col-span-2 lg:col-span-1" />
                        <Calendar time="short" linkState={true} className="col-span-4 md:col-span-2 lg:col-span-1" />
                        <Emails time="range" linkState={true} className="col-span-4" />
                    </div>
                </main>
            </TodolistContext.Provider>
        </DataContext.Provider>
    );
}

// export async function getStaticProps() {
//     let date = new Date();
//     const fetchTodolistData = await fetch(`http://localhost:3000/api/todolist?from=${ISODate(date)}&type=Day`);
//     const todolistData: ITodolist[] = await fetchTodolistData.json();
//     date.setDate(date.getDate() - 7);
//     const week = date.toISOString().split('T')[0];
//     const fetchData = await fetch(`http://localhost:3000/api/work?from=${week}`);
//     const data: IPage[] = await fetchData.json();
//     return {
//         props: { data, todolistData },
//     };
// }

export async function getServerSideProps(context: GetServerSidePropsContext) {
    // const session = await getServerSession(context.req, context.res, authOptions);

    // if (!session) {
    //     return { redirect: { destination: '/signin' } };
    // }

    let date = new Date();
    const fetchTodolistData = await fetch(`http://localhost:3000/api/todolist?from=${ISODate(date)}&type=Day`);
    const todolistData: ITodolist[] = await fetchTodolistData.json();
    date.setDate(date.getDate() - 7);
    const week = date.toISOString().split('T')[0];
    const fetchData = await fetch(`http://localhost:3000/api/work?from=${week}`);
    const data: IPage[] = await fetchData.json();
    return {
        props: { data, todolistData },
    };
}
